# Generated by Django 4.2.7 on 2023-11-22 18:49

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('status', models.CharField(choices=[('normal', 'normal'), ('client', 'client')], default='normal', max_length=100)),
                ('username', models.CharField(help_text='username', max_length=100, unique=True)),
                ('first_name', models.CharField(help_text='Prenom', max_length=100)),
                ('last_name', models.CharField(help_text='Nom', max_length=100)),
                ('email', models.EmailField(help_text='Nom du modèle', max_length=100)),
                ('phone', models.CharField(help_text='Phone', max_length=100)),
                ('address', models.CharField(help_text='adresse', max_length=100)),
                ('postal', models.IntegerField(help_text='Code Postal')),
                ('ville', models.CharField(help_text='Ville', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Marque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Nom de la marque', max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Modele',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Nom du modèle', max_length=100)),
                ('marque', models.ForeignKey(help_text='Marque à laquelle le modèle appartient', on_delete=django.db.models.deletion.CASCADE, to='car_dealer.marque')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Nom du service', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Commentaire', null=True)),
                ('prix', models.DecimalField(blank=True, decimal_places=0, help_text='Prix du service', max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Voiture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserve', models.BooleanField(default=False, verbose_name='Réserver')),
                ('sold', models.BooleanField(default=False, verbose_name='Vendu')),
                ('annee_fabrication', models.PositiveIntegerField(help_text='Année de fabrication')),
                ('carburant', models.CharField(blank=True, choices=[('Diesel', 'Diesel'), ('Essence', 'Essence'), ('Ethanol', 'Ethanol'), ('Electrique', 'Electrique'), ('Hydrogene', 'Hydrogene'), ('LPG', 'LPG'), ('CNG', 'CNG'), ('Hybride (Elec - Ess)', 'Hybride (Elec - Ess)'), ('Hybride (Elec - Diesel)', 'Hybride (Elec - Diesel)'), ('Autres', 'Autres')], help_text='Type de carburant de la voiture', max_length=90, null=True)),
                ('transmission', models.CharField(blank=True, choices=[('Manuelle', 'Manuelle'), ('Automatique', 'Automatique'), ('Semi-automatique', 'Semi-automatique')], help_text='Type de transmission', max_length=90, null=True)),
                ('kilometrage', models.PositiveIntegerField(help_text='Kilométrage actuel')),
                ('cruise_control', models.BooleanField(default=False, verbose_name='Cruise Control')),
                ('direction_assistee', models.BooleanField(default=False, verbose_name='Direction assistée')),
                ('audio_interface', models.BooleanField(default=False, verbose_name='Audio Interface')),
                ('airbags', models.BooleanField(default=False, verbose_name='Airbags')),
                ('air_conditionne', models.BooleanField(default=False, verbose_name='Air Conditionné')),
                ('siege_chauffant', models.BooleanField(default=False, verbose_name='Siège Chauffant')),
                ('alarm_system', models.BooleanField(default=False, verbose_name='Alarm System')),
                ('parkassist', models.BooleanField(default=False, verbose_name='Park Assist')),
                ('camera_recul', models.BooleanField(default=False, verbose_name='Camera de Recul')),
                ('start_stop', models.BooleanField(default=False, verbose_name='Start Stop')),
                ('essui_auto', models.BooleanField(default=False, verbose_name='Essuie-glace Auto')),
                ('car_play', models.BooleanField(default=False, verbose_name='Car Play-System')),
                ('description', models.TextField(blank=True, help_text='Description de la voiture', null=True)),
                ('date_poste', models.DateTimeField(auto_now_add=True, help_text="Date de publication de l'annonce")),
                ('car_photo_1', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('car_photo_2', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('car_photo_3', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('car_photo_4', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('car_photo_5', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('car_photo_6', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('car_photo_7', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('car_photo_8', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('car_photo_9', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('prix', models.DecimalField(decimal_places=0, help_text='Prix de la voiture', max_digits=10)),
                ('marque', models.ForeignKey(help_text='Marque de la voiture', on_delete=django.db.models.deletion.PROTECT, related_name='voitures', to='car_dealer.marque')),
                ('modele', models.ForeignKey(help_text='Modèle de la voiture', on_delete=django.db.models.deletion.CASCADE, to='car_dealer.modele')),
            ],
            options={
                'ordering': ['-date_poste'],
            },
        ),
        migrations.CreateModel(
            name='Vente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(blank=True, choices=[('Vente', 'Vente'), ('Service', 'Service')], help_text='Type de service', max_length=90, null=True)),
                ('paid', models.BooleanField(default=False, verbose_name='Payé')),
                ('date', models.DateTimeField(auto_now_add=True, help_text='Date de la vente')),
                ('montant_total', models.DecimalField(blank=True, decimal_places=0, help_text='Montant total de la vente', max_digits=10, null=True)),
                ('montant_acompte', models.DecimalField(blank=True, decimal_places=0, help_text="Montant de l'acompte", max_digits=10, null=True)),
                ('service_id', models.ForeignKey(blank=True, help_text='Identifiant du Service', null=True, on_delete=django.db.models.deletion.CASCADE, to='car_dealer.service')),
                ('user_id', models.ForeignKey(help_text='Identifiant du User', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('voiture_id', models.ForeignKey(blank=True, help_text='Identifiant de la voiture', null=True, on_delete=django.db.models.deletion.CASCADE, to='car_dealer.voiture')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, help_text='Commentaire', null=True)),
                ('service_id', models.ForeignKey(blank=True, help_text='Identifiant du Service', null=True, on_delete=django.db.models.deletion.CASCADE, to='car_dealer.service')),
                ('user_id', models.ForeignKey(help_text='Identifiant du membre qui a commenté', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
